@model IEnumerable<PrivTours.ViewModels.UsuarioViewModel>

@{
    ViewData["Title"] = "Index";
}
@section Styles{
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Empleados Private Tours</h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a asp-action="Dashboard" asp-controller="Admin">Dashboard</a></li>
                        <li class="breadcrumb-item active">Usuarios</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <div class="content">
        <div class="container-fluid">
            <p>
                <a class="btn btn-outline-success" asp-action="Crearusuario"><i class="fa fa-plus-circle"></i> Crear nuevo empleado</a>
            </p>
            <table id="tabla" class="table">
                <thead>
                    <tr>

                        <th>
                            @Html.DisplayNameFor(model => model.Documento)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Nombre)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Email)
                        </th>
                        <th>Rol</th>
                        <th>Estado</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var usuario in Model)
                    {
                        <tr>

                            <td>
                                @Html.DisplayFor(modelUsuario => usuario.Documento)
                            </td>
                            <td>
                                @Html.DisplayFor(modelUsuario => usuario.Nombre)
                            </td>
                            <td>
                                @Html.DisplayFor(modelUsuario => usuario.Email)
                            </td>

                            @if (usuario.Estado == true)
                            {
                                <td>Activo</td>
                            }
                            else
                            {
                                <td>Inactivo</td>
                            }
                            <td>

                                <a class="btn btn-secondary" asp-action="Editar" asp-route-id="@usuario.Id"><i class="fas fa-user-edit"></i></a>
                                <a class="btn  @(@usuario.Estado == true ? "btn-warning" : "btn-success")" onclick="cambiarEstado('@usuario.Id', '@usuario.Nombre', @usuario.Estado.ToString().ToLower());"><i class="fas @(@usuario.Estado == true ? "fa-lock" : "fa-lock-open")"></i></a>
                                <a class="btn btn-danger" onclick="eliminar('@usuario.Id', '@usuario.Nombre');"><i class="fas fa-user-minus"></i></a>
                            </td>

                        </tr>
                    }
                </tbody>

            </table>



        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content -->
    <!-- /.content-wrapper -->
</div>
@section Scripts{

    <script src="~/js/Tabla.js"></script>
    <script>

    @if(TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("Crear")) { <text>

              Swal.fire({
                title: "¡Felicitaciones!",
                type: "success",
                html: "@TempData["Mensaje"]",
                icon: 'success',
                timer: 3000
              });

             </text>
    }



    @if (TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("Editar"))
    {
        <text>

            Swal.fire({
                title: "¡Felicitaciones!",
                type: "success",
                html: "@TempData["Mensaje"]",
                icon: 'success',
                timer: 3000
            });

        </text>
    }

        function eliminar(id, nombreUsuario) {
            Swal.fire({
                title: '¿Está seguro de eliminar el empleado?',
                text: nombreUsuario,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Sí, eliminar!',
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("Delete","Usuarios", new { id = "id" })'.replace("id", encodeURIComponent(id)),
                        contentType: false,
                        processData: false,
                        success: function (result) {

                            if (result.data == "ok") {
                                setTimeout(function () {
                                    window.location.href = "@Url.Action("Index","Empleados")";
                                }, 3000);
                                Swal.fire({
                                    icon: 'success',
                                    title: result.message,
                                    showConfirmButton: false,
                                    timer: 5000
                                })
                            } else {
                                console.log("ERROR!!");
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: result.message,
                                })
                            }
                        },
                        error: function (err) {
                            console.log(err.data)
                        }
                    });
                }
            })
        }

        function cambiarEstado(id, nombreUsuario, estadoActual) {
            Swal.fire({
                title: '¿Está seguro de cambiar estado al empleado?',
                text: nombreUsuario,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: estadoActual == true ? '#d33' : '#28A745',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Sí, '.concat(estadoActual == true ? 'Inactivar' : 'Activar'),
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("CambiarEstado","Empleados", new { id = "id" })'.replace("id", encodeURIComponent(id)),
                        contentType: false,
                        processData: false,
                        success: function (result) {

                            if (result.data == "ok") {
                                setTimeout(function () {
                                    window.location.href = "@Url.Action("Index","Empleados")";
                                }, 3000);
                                Swal.fire({
                                    icon: 'success',
                                    title: result.message,
                                    showConfirmButton: false,
                                    timer: 5000
                                })
                            } else {
                                console.log("ERROR!!");
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: result.message,
                                })
                            }
                        },
                        error: function (err) {
                            console.log(err.data)
                        }
                    });
                }
            })
        }
    </script>
}