@model PrivTours.Models.Entities.Servicio

@{
    ViewData["Title"] = "Create";
}

@section Styles{

}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Crear Servicio</h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Servicios">Gestión Servicios</a></li>
                        <li class="breadcrumb-item active">Crear Servicio</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-6">

                    <form asp-action="Create">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label asp-for="Nombre" class="control-label"></label>
                            <input asp-for="Nombre" class="form-control" id="nombre" name="nombre" />
                            <span asp-validation-for="Nombre" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Descripcion" class="control-label"></label>
                            <input asp-for="Descripcion" class="form-control" id="apellidos" name="descripcion" />
                            <span asp-validation-for="Descripcion" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Restriccion" class="control-label"></label>
                            <input asp-for="Restriccion" class="form-control" id="email" name="restriccion" />
                            <span asp-validation-for="Restriccion" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Recomendacion" class="control-label"></label>
                            <input asp-for="Recomendacion" class="form-control" id="telefono" name="recomendacion" />
                            <span asp-validation-for="Recomendacion" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="Estado" class="control-label"></label>
                            <input asp-for="Estado" class="form-control" id="telefonoEmer" name="telefonoEmer" />
                            <span asp-validation-for="Estado" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <input type="button" value="Crear" class="btn btn-primary" onclick="Crear()" />
                        </div>
                    </form>
                    <div>
                        <a asp-action="Index" class="btn btn-outline-secondary">Volver</a>
                    </div>

                </div>
                <!-- /.col-md-6 -->
            </div>
            <!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->

@section Scripts{

    <script>
    function Crear() {

        var isValid = true;
        if (document.getElementById("nombre").value == '') {
            $('#nombre').siblings('span.text-danger').text('El nombre es requerido');
            isValid = false;
        } else {
            $('#nombre').siblings('span.text-danger').text('');
        }



        //if (document.getElementById("direccion").value == '') {
        //    $('#direccion').siblings('span.text-danger').text('La dirección es requerida');
        //    isValid = false;
        //} else {
        //    $('#direccion').siblings('span.text-danger').text('');
        //}

        if (isValid) {
            Swal.fire({ //Mensaje de confirmar
                title: '¿Desea guardar el servicio?',
                //showDenyButton: true,
                showCancelButton: true,
                confirmButtonText: `Guardar`,
                cancelButtonText: `Cancelar`,
                reverseButtons: true
            }).then((result) => {

                if (result.isConfirmed) { // si confirmamos
                    var formData = new FormData(); //se crea el ojeto de tipo formData que va a contener todo lo que vamos a enviar
                    formData.append("Nombre", document.getElementById("nombre").value);
                    formData.append("Email", document.getElementById("email").value);
                    formData.append("Direccion", document.getElementById("direccion").value);

                     $.ajax({
                            type: "POST",
                            //url: "../Cargos/CrearCargo",
                            url: '@Url.Action("Create","Servicio")',
                            contentType: false,
                            processData: false,
                            data: formData,
                            success: function (result) {

                                if (result.data == "ok") {
                                    setTimeout(
                                        function () {
                                            window.location.href = "@Url.Action("Index","servicioss")";
                                        }, 2000);
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Servicio guardado',
                                        showConfirmButton: false,
                                        timer: 1500
                                    })
                                } else {
                                    console.log("ERROR!!");
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: 'Ocurrió un error al crear el servicio',
                                    })
                                }
                            },
                            error: function (err) {
                                console.log(err.data)
                            }
                     });

                } else if (result.isDenied) {
                    Swal.fire('Servicio no guardado', '', 'info')
                }
            })
        }


    }

    function validaEmail(email) {
        var regex = /^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        return regex.test(email);
    }
    </script>

}