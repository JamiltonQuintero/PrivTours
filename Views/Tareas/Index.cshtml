@model IEnumerable<PrivTours.ViewModels.SolicitudViewModel>

@{
    ViewData["Title"] = "Index";
}


@section Styles{
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Empleados Private Tours</h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a asp-action="Dashboard" asp-controller="Admin">Dashboard</a></li>
                        <li class="breadcrumb-item active">Empleados</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <div class="content">
        <div class="container-fluid">
       
            @foreach (var tarea in Model)
            {
            <div class="card">
                <h3 class="card-header">Solicitud #@tarea.SolicitudId</h3>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-4">
                            <h4 class="card-subtitle mb-2 text-muted">Nombre cliente :  </h4>
                            <p>@tarea.Cliente.Nombre @tarea.Cliente.Apellidos</p>
                            <h4 class="card-subtitle mb-2 text-muted">Telefono cliente</h4>
                            <p>@tarea.Cliente.Telefono</p>

                        </div>
                        <div class="col-sm-4">
                            <h4 class="card-subtitle mb-2 text-muted">Nombre servicio :  </h4>
                            <p>@tarea.Servicio.Nombre</p>
                            <h4 class="card-subtitle mb-2 text-muted">Descripcion servicio :  </h4>
                            <p>@tarea.Descripcion</p>

                        </div>

                        <div class="col-sm-4">
                            <h4 class="card-subtitle mb-2 text-muted">Fecha inicio:</h4>
                            <p>@tarea.FechaInicio : @tarea.HoraInicio</p>
                            <h4 class="card-subtitle mb-2 text-muted">Fecha Fin:</h4>
                            <p>@tarea.HoraFinal : @tarea.HoraFinal</p>

                        </div>
                    </div>
                    <div class="row-cols-3">

                        <a href="#" class="btn btn-danger">Cancelar tarea</a>
                        <a href="#" class="btn btn-primary">Terminar tarea</a>

                    </div>
                </div>
                </div>
                }

            </div><!-- /.container-fluid -->
    </div>
    <!-- /.content -->
    <!-- /.content-wrapper -->
</div>
@section Scripts{

    <script src="~/js/Tabla.js"></script>
    <script>

    @if(TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("Crear")) { <text>

              Swal.fire({
                title: "¡Felicitaciones!",
                type: "success",
                html: "@TempData["Mensaje"]",
                icon: 'success',
                timer: 3000
              });

             </text>
    }



    @if (TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("Editar"))
    {
        <text>

            Swal.fire({
                title: "¡Felicitaciones!",
                type: "success",
                html: "@TempData["Mensaje"]",
                icon: 'success',
                timer: 3000
            });

        </text>
    }

        function eliminar(id, nombreUsuario) {
            Swal.fire({
                title: '¿Está seguro de eliminar el empleado?',
                text: nombreUsuario,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Sí, eliminar!',
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("Delete", "Empleados", new { id = "id" })'.replace("id", encodeURIComponent(id)),
                        contentType: false,
                        processData: false,
                        success: function (result) {

                            if (result.data == "ok") {
                                setTimeout(function () {
                                    window.location.href = "@Url.Action("Index", "Empleados")";
                                }, 1500);
                                Swal.fire({
                                    icon: 'success',
                                    title: result.message,
                                    showConfirmButton: false,
                                    timer: 5000
                                })
                            } else {
                                console.log("ERROR!!");
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: result.message,
                                })
                            }
                        },
                        error: function (err) {
                            console.log(err.data)
                        }
                    });
                }
            })
        }

        function cambiarEstado(id, nombreUsuario, estadoActual) {
            Swal.fire({
                title: '¿Está seguro de cambiar estado al empleado?',
                text: nombreUsuario,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: estadoActual == true ? '#d33' : '#28A745',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Sí, '.concat(estadoActual == true ? 'Inactivar' : 'Activar'),
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("CambiarEstado", "Empleados", new { id = "id" })'.replace("id", encodeURIComponent(id)),
                        contentType: false,
                        processData: false,
                        success: function (result) {

                            if (result.data == "ok") {
                                setTimeout(function () {
                                    window.location.href = "@Url.Action("Index","Empleados")";
                                }, 1500);
                                Swal.fire({
                                    icon: 'success',
                                    title: result.message,
                                    showConfirmButton: false,
                                    timer: 5000
                                })
                            } else {
                                console.log("ERROR!!");
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: result.message,
                                })
                            }
                        },
                        error: function (err) {
                            console.log(err.data)
                        }
                    });
                }
            })
        }
    </script>
}

