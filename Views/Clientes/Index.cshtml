@model PrivTours.ViewModels.ClientesConPermisosViewModel


@{
    ViewData["Title"] = "Index";
}
@section Styles{
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Clientes Private Tours</h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a asp-action="Dashboard" asp-controller="Admin">Dashboard</a></li>
                        <li class="breadcrumb-item active">Clientes</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <div class="content">
        @if (Model.Clientes_Permiso)
        {
            <div class="container-fluid">

                @if (@Model.Clientes_crear_Permiso)
                {
                    <p>
                        <a class="btn btn-outline-success" asp-action="Create"><i class="fa fa-plus-circle"></i> Crear nuevo cliente</a>
                    </p>
                }

                <table class="table" id="tabla">
                    <thead>
                        <tr>
                            <th>
                                Nombre
                            </th>
                            <th>
                                Email
                            </th>
                            <th>
                                Telefono
                            </th>
                            <th>
                                Numero de Documento
                            </th>
                            <th>Estado</th>
                            <th>
                                Acciones
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cliente in Model.Clientes)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelCliente => cliente.Nombre)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelCliente => cliente.Email)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelCliente => cliente.Telefono)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelCliente => cliente.NumDoc)
                                </td>
                                @if (cliente.Estado == true)
                                {
                                    <td>Activo</td>
                                }
                                else
                                {
                                    <td>Inactivo</td>
                                }
                                <td>

                                    @if (Model.Clientes_editar_Permiso)
                                    {
                                        <a class="btn btn-secondary" asp-action="Edit" asp-route-id="@cliente.ClienteId"><i class="fas fa-user-edit"></i></a>
                                    }
                                    @if (Model.Clientes_activar_inactivar_Permiso)
                                    {
                                        <a class="btn  @(cliente.Estado == true ? "btn-warning" : "btn-success")" onclick="cambiarEstado('@cliente.ClienteId', '@cliente.Nombre', @cliente.Estado.ToString().ToLower());"><i class="fas @(cliente.Estado == true ? "fa-lock" : "fa-lock-open")"></i></a>

                                    }
                                    @if (Model.Clientes_eliminar_Permiso)
                                    {
                                        <a class="btn btn-danger" onclick="eliminar('@cliente.ClienteId', '@cliente.Nombre');"><i class="fas fa-user-minus"></i></a>
                                    }

                                </td>

                            </tr>
                        }
                    </tbody>

                </table>


            </div><!-- /.container-fluid -->
        }
        else
        {
    <div class="content-wrapper">
        <div class="content">
            <div class="container-fluid">

                <div class="container py-5">
                    <div class="row">
                        <div class="col-md-2 text-center">
                            <p><i class="fa fa-exclamation-triangle fa-5x"></i><br />Acceso denegado: 403</p>
                        </div>
                        <div class="col-md-10">
                            <h3>OPPSSS!!!! Lo sentimos...</h3>
                            <p>No tienes acceso al recurso.<br />Por favor regresa a la página en la que te encontrabas.</p>
                            <a class="btn btn-danger" href="javascript:history.back()">Volver</a>
                            <!--<a asp-action="Index">Volver</a>-->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
        }
    </div>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
@section Scripts{


    <script src="~/js/Tabla.js"></script>
    <script>

    @if(TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("Crear")) { <text>

              Swal.fire({
                title: "¡Felicitaciones!",
                type: "success",
                html: "@TempData["Mensaje"]",
                icon: 'success',
                timer: 3000
              });

             </text>
    }

    @if (TempData["Mensaje"] != null && TempData["Accion"].ToString().Equals("Editar"))
    {
        <text>

            Swal.fire({
                title: "¡Felicitaciones!",
                type: "success",
                html: "@TempData["Mensaje"]",
                icon: 'success',
                timer: 3000
            });

        </text>
    }

        function eliminar(id, nombreUsuario) {
            Swal.fire({
                title: '¿Estás seguro de eliminar al cliente?',
                text: nombreUsuario,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Sí, ¡eliminar!',
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("Delete", "Clientes", new { id = "id" })'.replace("id", encodeURIComponent(id)),
                        contentType: false,
                        processData: false,
                        success: function (result) {

                            if (result.data == "ok") {
                                setTimeout(function () {
                                    window.location.href = "@Url.Action("Index", "Clientes")";
                                }, 1500);
                                Swal.fire({
                                    icon: 'success',
                                    title: result.message,
                                    showConfirmButton: false,
                                    timer: 5000
                                })
                            } else {
                                console.log("ERROR!!");
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: result.message,
                                })
                            }
                        },
                        error: function (err) {
                            console.log(err.data)
                        }
                    });
                }
            })
        }

        function cambiarEstado(id, nombreUsuario, estadoActual) {
            Swal.fire({
                title: '¿Estás seguro de cambiar el estado del cliente?',
                text: nombreUsuario,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: estadoActual == true ? '#d33' : '#28A745',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Sí, '.concat(estadoActual == true ? 'Inactivar' : 'Activar'),
                cancelButtonText: 'Cancelar',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("CambiarEstado", "Clientes", new { id = "id" })'.replace("id", encodeURIComponent(id)),
                        contentType: false,
                        processData: false,
                        success: function (result) {

                            if (result.data == "ok") {
                                setTimeout(function () {
                                    window.location.href = "@Url.Action("Index","Clientes")";
                                }, 1500);
                                Swal.fire({
                                    icon: 'success',
                                    title: result.message,
                                    showConfirmButton: false,
                                    timer: 5000
                                })
                            } else {
                                console.log("ERROR!!");
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: result.message,
                                })
                            }
                        },
                        error: function (err) {
                            console.log(err.data)
                        }
                    });
                }
            })
        }
    </script>
}




